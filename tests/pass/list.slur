;; -*- scheme -*-

(module Main
  (define foldr (f, z, xs)
    return (case xs of
                 | [] -> z
                 | _  -> (f (head xs)
                            (foldr f z (tail xs)))))
  
  (define concat (xs)
    return (foldr (++) [] xs))
      
  (define main IO ()
    ;;run (print (sum [1,2,3,4]))    
    run (print ((zip [1,2,3]
                     [1,2,3])))    

    run (print ((foldr (+) 100 [1,2,3,4])))
    run (print (typeof 1))
    run (print (length [1,2,3]))
    run (print (concat [[1,2], [3,4], [1,[2,3],4]]))
    run (print "done")
    )
  )